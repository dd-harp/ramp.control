[{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://dd-harp.github.io/ramp.control/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://dd-harp.github.io/ramp.control/articles/BedNets.html","id":"coverage","dir":"Articles","previous_headings":"","what":"Coverage","title":"Bed Nets","text":"simplest models, can simply set coverage","code":"mod <- xds_setup(MYname = \"SI\") mod <- setup_vector_control(mod) mod <- xds_solve(mod) cov_opts <- list(   F_season = function(t)     {ifelse(t < 0, 0, (sin(2*pi*(t-365/4) / 365) + 1))} ) tt = seq(0:730) with(cov_opts, plot(tt, F_season(tt), type = \"l\")) mod <- setup_bednets(mod,      coverage_name = \"func\", coverage_opts = cov_opts,       effect_sizes_name = \"lemenach\") tt = seq(0:730) show_bednet_coverage(tt, mod)"},{"path":[]},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS-insectides.html","id":"insecticides","dir":"Articles","previous_headings":"","what":"Insecticides","title":"IRS - Insecticides","text":"Information waning potency available manufacturers insecticides, developed functions preset differences reflect differences.","code":"make_profile <-  function(t, a, b, c) {    return((1 - a) / (1 + exp(-b * (t/30 + c))) + a)}"},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS-insectides.html","id":"pyrethroid","dir":"Articles","previous_headings":"Insecticides","what":"Pyrethroid","title":"IRS - Insecticides","text":"","code":"pyrethroid_profile <- make_profile(tt, 0, -.3, -6) pyrethroid_profile <- pyrethroid_profile/max(pyrethroid_profile) plot(tt, pyrethroid_profile, type=\"l\", col = \"darkred\")  pyrethroid <- make_irs_round(\"pyrethroid\", -10, 1) Fa <- make_function(pyrethroid) lines(tt1, Fa(tt1), type = \"l\", main=\"Coverage\", ylab = \"A Sharkfin Function\", xlab = \"Time\")"},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS-insectides.html","id":"actellic","dir":"Articles","previous_headings":"Insecticides","what":"Actellic","title":"IRS - Insecticides","text":"","code":"actellic_profile <- make_profile(tt, 0, -.5, -12) plot(tt, actellic_profile, type=\"l\", col = \"darkred\")  actellic <- make_irs_round(\"actellic\", -10, 1) Fa <- make_function(actellic) lines(tt1, Fa(tt1), type = \"l\", main=\"Coverage\", ylab = \"A Sharkfin Function\", xlab = \"Time\")"},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS-insectides.html","id":"bendiocarb","dir":"Articles","previous_headings":"Insecticides","what":"Bendiocarb","title":"IRS - Insecticides","text":"","code":"bendio_profile <- make_profile(tt, 0, -1.2, -3) bendio_profile <- bendio_profile/max(bendio_profile)  plot(tt, bendio_profile, type=\"l\", col = \"darkred\") bendiocarb <- make_irs_round(\"bendiocarb\", -10,  1) Fb <- make_function(bendiocarb) lines(tt1, Fb(tt1), type = \"l\", main=\"Coverage\", ylab = \"A Sharkfin Function\", xlab = \"Time\")"},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS-insectides.html","id":"fludora-fusion","dir":"Articles","previous_headings":"Insecticides","what":"Fludora Fusion","title":"IRS - Insecticides","text":"","code":"ff_profile <- make_profile(tt, 0, -0.9, -10) plot(tt, ff_profile, type=\"l\", col= \"darkred\") fludora_fusion <- make_irs_round(\"fludora_fusion\", -10, 1) Fff <- make_function(fludora_fusion) lines(tt1, Fff(tt1), type = \"l\", main=\"Coverage\", ylab = \"A Sharkfin Function\", xlab = \"Time\")"},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS-insectides.html","id":"sumishield","dir":"Articles","previous_headings":"Insecticides","what":"Sumishield","title":"IRS - Insecticides","text":"","code":"clothianidin_profile <- make_profile(tt, 0, -.4, -12) clothianidin_profile <- clothianidin_profile/max(clothianidin_profile) plot(tt, clothianidin_profile, type=\"l\", col = \"darkred\") sumishield <- make_irs_round(\"sumishield\", -10, 1) Fs <- make_function(sumishield) lines(tt1, Fs(tt1), type = \"l\", main=\"Coverage\", ylab = \"A Sharkfin Function\", xlab = \"Time\")"},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS.html","id":"coverage","dir":"Articles","previous_headings":"","what":"Coverage","title":"IRS","text":"IRS usually done malaria program, large number houses sprayed short period time. One measure coverage fraction houses sprayed, \\(C\\), since potency insecticide wanes time, define coverage product fraction houses sprayed potency, \\(P(t)\\). operational measure can define without thinking much mosquito behaviors. Coverage thus independent mosquito species. model coverage, developed sharkfin functions ramp.xds, product two sigmoidal functions – one ramping different shapes. sharkfin function, coverage increases 20 days zero 90%, reaching 50% maximum day 50. Potency wanes, reaching 50% day 230, 180 days spray round.","code":"irs_par <- makepar_F_sharkfin(D=50, uk=1/3, L=180, mx=.9) Fsf <- make_function(irs_par) model <- xds_setup(MYname = \"SI\", Loptions = list(Lambda=40, season_par=makepar_F_sin())) model <- xds_solve(model, 2000) model <- last_to_inits(model) model <- xds_solve(model, 1100) xds_plot_EIR(model) model <- setup_irs(model, coverage_name = \"func\", coverage_opts=list(trend_par = irs_par, mx=1), effect_sizes_name = \"simple\") show_irs_coverage(tt, model) model <- xds_solve(model, 1100) xds_plot_EIR(model)"},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS.html","id":"effect-sizes","dir":"Articles","previous_headings":"","what":"Effect Sizes","title":"IRS","text":"effects IRS effect sizes related realized coverage, \\(\\phi\\): effect, mosquito must come contact IRS, behaviors different mosquito species affect often rest sprayed surface. call contact parameter zap. Realized coverage product coverage contact parameter. Models effect sizes translate realized coverage changes values mosquito bionomic parameters. simple model, called simple, mortality changes baseline \\(g\\) assuming addtional mortality every time mosquito blood feeds human makes contact sprayed surface: \\[ g \\rightarrow g + f q \\phi\\] effect sizes ratio modified mortality rate baseline: \\[ \\frac{g + fq\\phi}{g} = 1 + \\phi \\frac{fq}{g}.\\] effect size computed relative baseline bionomic parameter set, returned models independent effect sizes. effect size returned, rather modified parameters, case multiple modes control operating. Later, baseline modified control taking product baseline independent effect sizes.","code":""},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS.html","id":"multiple-spray-rounds","dir":"Articles","previous_headings":"","what":"Multiple Spray Rounds","title":"IRS","text":"want able simulate multiple spray rounds, possibly different zap parameters different insecticides:   Now, pass setup_irs_multiround","code":"round1 <- make_irs_round(\"actellic\", 50, .95, 1) round2 <- make_irs_round(\"sumishield\", 415, .95) F1 <- make_function(round1) F2 <- make_function(round2) tt <- seq(0, 1095, by=5)  plot(tt, 1-(1-F1(tt))*(1-F2(tt)), type = \"l\", main=\"Coverage\", ylab = \"A Sharkfin Function\", xlab = \"Time\") lines(tt, F1(tt), col = \"darkred\") lines(tt, F2(tt), col = \"darkblue\") test_irs = list( t_init = c(60, 240, 420, 785)+730, type = c(\"bendiocarb\", \"bendiocarb\", \"actellic\", \"sumishield\"), coverage = c(.9, .85, .9, .9), zap = c(.95, .8, 0.8, .4)) m1 <- make_irs_round(\"actellic\", 500, .9) Fm1 <- make_function(m1) plot(tt, Fm1(tt), type = \"l\") nullit = make_irs_multiround() Fn <- make_function(nullit$rounds_par)  Fn(c(1:5)) ## [1] 0 0 0 0 0 multi4 = make_irs_multiround(options = test_irs) F4r <- make_function(multi4$rounds_par)"},{"path":"https://dd-harp.github.io/ramp.control/articles/IRS.html","id":"adding-irs-to-a-model","dir":"Articles","previous_headings":"","what":"Adding IRS to a Model","title":"IRS","text":"now point can add IRS.","code":"tt0 <-  365*(0:10) yy0 <-  c(.7, 2, 1.4, 1.8, 0.6, .8, 1.1, 2, 1, .5, .5) Lo <- list(   Lambda = 50,   season_par = makepar_F_sin(),   trend_par = makepar_F_spline(tt=tt0, yy=yy0)  ) mod <- xds_setup(Loptions=Lo, MYname = \"SI\") mod <- xds_solve(mod) mod <- last_to_inits(mod)  mod <- xds_solve(mod, 10*365, 10) xds_plot_PR(mod) mod_irs <- setup_irs(mod, effect_sizes_name = \"simple\", coverage_name = \"multiround\", coverage_opts = test_irs) show_irs_coverage(tt, mod_irs) mod_irs$irs_obj$cover_obj$coverage[2] = 0.3 mod_irs$irs_obj$cover_obj <- make_F_cover_irs(mod_irs$irs_obj$cover_obj) show_irs_coverage(tt, mod_irs) mod_irs <- xds_solve(mod_irs, Tmax=365*8, dt=1) xds_plot_PR(mod_irs, clrs=\"darkblue\") xds_plot_PR(mod, add=T) mod_irs1 <- add_irs_round(mod_irs, \"bendiocarb\", 300, .9, .9) mod_irs1$irs_obj$cover_obj$type ## [1] \"bendiocarb\" \"bendiocarb\" \"actellic\"   \"sumishield\" mod_irs1$irs_obj$cover_obj$t_init ## [1]  790  970 1150 1515 mod_irs1$irs_obj$cover_obj$coverage ## [1] 0.90 0.85 0.90 0.90 mod_irs1$irs_obj$cover_obj$zap ## [1] 0.95 0.80 0.80 0.40 mod_irs1 <- xds_solve(mod_irs1, 10*365, 10) xds_plot_PR(mod_irs, clrs=\"darkblue\") xds_plot_PR(mod, add=T) xds_plot_PR(mod_irs1, clrs= \"darkred\", add=T)"},{"path":"https://dd-harp.github.io/ramp.control/articles/MassTreatment.html","id":"basic-setup","dir":"Articles","previous_headings":"","what":"Basic Setup","title":"Mass Treatment","text":"first step basic setup. setting MDA, ’s good idea check module capable handling mass treatment. see module supports , look skill set. example, can check whether SIS supports MDA MSAT. SIS module supports MDA. next step basic setup: Next solve .","code":"skill_set_XH(\"SIS\")$mda ## [1] TRUE base_model <- xds_setup_eir(Xname = \"SIS\",                         eir=1/365,                         season_par = makepar_F_sin(phase=120)) base_model <- burnin(base_model)  base_model <- xds_solve(base_model, 1095,5) xds_plot_PR(base_model)"},{"path":"https://dd-harp.github.io/ramp.control/articles/MassTreatment.html","id":"mass-treatment-events","dir":"Articles","previous_headings":"","what":"Mass Treatment Events","title":"Mass Treatment","text":"Adding mass treatment advanced setup option. function call setup_mass_treat_events. use , need pass: start – julian date(s) span – length event frac_tot – fraction treated (mda) tested (msat) test – whether testing done test=TRUE configures MSAT test=FALSE configures MDA sets two rounds MDA starting days 180 480. round lasts 10 days, treats 90% population. Now solve base_model MDA compare baseline:","code":"start = c(180, 480) span = c(10,10) frac_tot = c(0.9, 0.9) test = c(FALSE, FALSE)  mda_model <- setup_mass_treat_events(base_model, start, span, frac_tot, test) mda_model <- xds_solve(mda_model, 1095,5) xds_plot_PR(base_model) xds_plot_PR(mda_model, add=T, clrs = \"darkred\")"},{"path":"https://dd-harp.github.io/ramp.control/articles/MassTreatment.html","id":"add-events","dir":"Articles","previous_headings":"","what":"Add Events","title":"Mass Treatment","text":"add another round mass treatment, use add_mass_treat_events. adds extra round day 600 like others 2 rounds.  mass treatment events set , function calls setup_mass_treat_events. adds mass treatment event base_model  plot compares four models:","code":"tt <- seq(0, 1095, by = 1) mda_model_1 <- add_mass_treat_events(mda_model, 600, 10, .9, FALSE) mda_model_1 <- xds_solve(mda_model_1, 1095,5) show_mda(tt, mda_model_1) mda_model_2 <- add_mass_treat_events(base_model, 600, 10, .9, FALSE) mda_model_2 <- xds_solve(mda_model_2, 1095,5) show_mda(tt, mda_model_2) xds_plot_PR(mda_model_2, clrs=\"darkblue\") xds_plot_PR(mda_model_1, add=T, clrs = \"purple3\") xds_plot_PR(base_model, add=T) xds_plot_PR(mda_model, add=T, clrs = \"darkred\")"},{"path":[]},{"path":"https://dd-harp.github.io/ramp.control/articles/MassTreatment.html","id":"mass-treatment-ports","dir":"Articles","previous_headings":"Notes","what":"Mass Treatment Ports","title":"Mass Treatment","text":"understand mass treatment ports set , can look inside SIS module. relevant lines dXHdt.SIS : case, mda msat work like parameter \\(r,\\) inside code, term computed: r_t = r+mda(t)+d_rdt*msat(t), d_rdt parameter describes probability testing positive RDT. Perhaps importantly, mass treatment functions return per-capita rate. model explained documentation function: setup, functions mda msat assigned function returns \\(0.\\) Advanced setup replaces mda msat new function.","code":"r_t <- r + mda(t) + d_rdt*msat(t) dI <- foi*(H-I) - r_t*I + D_matrix %*% I help(dXHdt.SIS)"},{"path":"https://dd-harp.github.io/ramp.control/articles/MassTreatment.html","id":"mass-treatment-functions","dir":"Articles","previous_headings":"Notes","what":"Mass Treatment Functions","title":"Mass Treatment","text":"Treatment span event occurs fixed rate. shape treatment curve variant sharkfin function:  total area curve calibrated reach right fraction treated (mda) tested (msat): case, 90%. can check :","code":"tt <- seq(598, 612, by = .1) show_mda(tt, mda_model_1) mda <- mda_model_1$mass_treat_obj$mda_obj$F_treat t_frac = 1-exp(-integrate(mda, 595, 615)$val) approx_equal(.9, t_frac, tol = 1e-6) ## [1] TRUE"},{"path":"https://dd-harp.github.io/ramp.control/articles/vc_lemenach.html","id":"parameters","dir":"Articles","previous_headings":"","what":"Parameters","title":"ITN-based Vector Control","text":"case study use simple model 3 patches, 3 population strata, 3 aquatic habitats. usual, set parameter values compute values state variables equilibrium. part equilibrium calculation must compute \\(\\Upsilon(0) = \\exp\\left(-\\int_{-\\tau}^{0} \\Omega(s) ds \\right)\\); value integrated mosquito demography matrix initial time point. simplify things, simply assume conditions constant prior \\(t=0\\) \\(\\Upsilon(0) = e^{-\\Omega\\tau}\\).","code":"nPatches <- 3 nStrata <- nPatches nHabitats <- nPatches residence <- c(1:nStrata) membership <- c(1:3) HPop <- rpois(n = nPatches, lambda = 1000) # human parameters b <- 0.55 c <- 0.15 r <- 1/200 Xo = list(b=b,c=c,r=r) wf <- rep(1, nStrata)  pfpr <- runif(n = nStrata, min = 0.25, max = 0.35) X <- rbinom(n = nStrata, size = HPop, prob = pfpr)  searchWtsH = rep(1,3)   TaR <- matrix(   data = c(     0.9, 0.05, 0.05,     0.05, 0.9, 0.05,     0.05, 0.05, 0.9   ), nrow = nStrata, ncol = nPatches, byrow = T ) TaR <- t(TaR) f <- rep(0.3, nPatches) q <- rep(0.9, nPatches)  g <- rep(1/10, nPatches)   mu <- rep(0, nPatches)   sigma <- rep(1/100, nPatches)   nu <- rep(1/2, nPatches)   eggsPerBatch <- 30 eip <- 11 MYo = list(f=f, q=q, g=g, sigma=sigma, mu=mu,              nu=nu, eggsPerBatch=eggsPerBatch, eip=eip) K_matrix = make_K_matrix_herethere(nPatches) K_matrix ##      [,1] [,2] [,3] ## [1,]  0.0  0.5  0.5 ## [2,]  0.5  0.0  0.5 ## [3,]  0.5  0.5  0.0"},{"path":"https://dd-harp.github.io/ramp.control/articles/vc_lemenach.html","id":"equilibrium","dir":"Articles","previous_headings":"","what":"Equilibrium","title":"ITN-based Vector Control","text":"Now compute equilibrium conditions adult mosquitoes human populations, PfPR human population maintained input levels conditions unchanging. Given equilibrium value \\(\\Lambda\\) required sustain mosquito populations level sufficient maintain transmission level PfPR, well values \\(\\psi\\) (maturation rate) \\(\\phi\\) (density independent mortality), compute equilibrium values \\(L\\) (aquatic mosquito density) \\(\\theta\\) (density dependent mortality).","code":"# derived EIR to sustain equilibrium pfpr EIR <- diag(1/b, nStrata) %*% ((r*X) / (HPop - X))  # ambient pop W <- TaR %*% HPop  # biting distribution matrix beta <- diag(wf) %*% t(TaR) %*% diag(1/as.vector(W), nPatches)  # kappa kappa <- t(beta) %*% (X*c)  Omega <- make_Omega_xde(g, sigma, mu, K_matrix) Omega_inv <- solve(Omega) Upsilon <- expm::expm(-Omega * eip) Upsilon_inv <- expm::expm(Omega * eip)  # equilibrium solutions Z <- diag(1/(f*q), nPatches) %*% ginv(beta) %*% EIR MY <- diag(1/as.vector(f*q*kappa), nPatches) %*% Upsilon_inv %*% Omega %*% Z Y <- Omega_inv %*% (diag(as.vector(f*q*kappa), nPatches) %*% MY) M <- MY + Y P <- solve(diag(f, nPatches) + Omega) %*% diag(f, nPatches) %*% M Lambda <- Omega %*% M # aquatic habitat membership matrix (assume 1 habitat per patch) calN <- matrix(0, nPatches, nHabitats) diag(calN) <- 1  # egg dispersal matrix (assume 1 habitat per patch) calU <- matrix(0, nHabitats, nPatches) diag(calU) <- 1  psi <- 1/10 phi <- 1/12 eta <- as.vector(calU %*% (M * nu * eggsPerBatch))  alpha <- as.vector(solve(calN) %*% Lambda) L <- alpha/psi theta <- (eta - psi*L - phi*L)/(L^2)"},{"path":"https://dd-harp.github.io/ramp.control/articles/vc_lemenach.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"ITN-based Vector Control","text":"Now state variables solved equilibrium, can set parameters components system. use null model human demographic dynamics, assumes \\(H\\) constant time. ran model point, get baseline. Instead, set time-varying function compute coverage ITNs time point. use sine curve period 365 days goes 0 1 period, phase shifted 0 returns 0. function also returns 0 \\(t<0\\). must function takes single argument t (time) returns scalar value. note seasonality function exceeds one. evaluate , values get chopped.  use null model human demographic dynamics, assumes \\(H\\) constant time.","code":"# adult mosquito parameters  Lo = list(psi=psi, phi=phi, theta=theta, L=L)  MYo = list(f=f, q=q, g=g, sigma=sigma,              nu=nu, eggsPerBatch=eggsPerBatch,              M=M, Y=Y, Z=Z) xds_setup(MYname=\"SI\", Xname=\"SIS\", Lname=\"basicL\",            nPatches=3, HPop=HPop, membership=membership,            MYoptions=MYo, K_matrix=K_matrix,           XHoptions=Xo, residence=1:3, searchB=rep(1,3),            TimeSpent =TaR, searchQ=rep(1,3), Loptions=Lo) -> itn_mod itn_mod <- xds_solve(itn_mod, Tmax=1830, dt=15) itn_mod <- last_to_inits(itn_mod) cov_options <- list(   mean = 0.2,    F_season = function(t)     {ifelse(t < 0, 0, (sin(2*pi*(t-365/4) / 365) + 1))} ) itn_mod <- setup_bednets(itn_mod,      coverage_name = \"func\",       coverage_opts = cov_options,       effect_sizes_name = \"lemenach\") tt = seq(0, 1830, by = 15)  with(cov_options, plot(tt, 0.2*F_season(tt), type =\"l\", lwd = 2, lty=2, col = \"darkred\")) show_bednet_coverage(tt, itn_mod, add=T) xds_solve(itn_mod, 1825, 15) -> itn_mod par(mfrow = c(2,1)) xds_plot_Y(itn_mod, clrs=turbo(3), llty=2) xds_plot_Z(itn_mod, clrs=turbo(3), add=T) xds_plot_EIR(itn_mod) xds_plot_PR(itn_mod)"},{"path":"https://dd-harp.github.io/ramp.control/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David L. Smith. Author, maintainer.","code":""},{"path":"https://dd-harp.github.io/ramp.control/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith D (2025). ramp.control: Control RAMP. R package version 1.0.2-0, https://dd-harp.github.io/ramp.control.","code":"@Manual{,   title = {ramp.control: Control for RAMP},   author = {David L. Smith},   year = {2025},   note = {R package version 1.0.2-0},   url = {https://dd-harp.github.io/ramp.control}, }"},{"path":[]},{"path":[]},{"path":"https://dd-harp.github.io/ramp.control/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Control for RAMP","text":"ramp.control code library extends ramp.xds. aims hold comprehensive set published disease control models algorithms code verified tested. install latest version ramp.xds GitHub, run following lines code R session. install latest version ramp.control Github, run following line R session:","code":"library(devtools) devtools::install_github(\"dd-harp/ramp.xds\") devtools::install_github(\"dd-harp/ramp.control\")"},{"path":"https://dd-harp.github.io/ramp.control/index.html","id":"what-is-ramp","dir":"","previous_headings":"","what":"What is RAMP?","title":"Control for RAMP","text":"RAMP – Robust Analytics Malaria Policy – bespoke inferential system malaria decision support adaptive malaria control. core goal RAMP characterize, quantify, propagate uncertainty conventional analysis simulation-based analytics.","code":""},{"path":"https://dd-harp.github.io/ramp.control/index.html","id":"what-is-rampxds","dir":"","previous_headings":"","what":"What is ramp.xds?","title":"Control for RAMP","text":"ramp.xds R software package supports nimble model building simulation-based analytics malaria research. designed help research scientists policy analysts set , analyze, solve, apply dynamical systems models describing epidemiology, spatial transmission dynamics, control malaria mosquito-transmitted pathogens. software also supports nimble model building analysis mosquito ecology, capability handle forcing weather exogenous variables. software designed around rigorous mathematical framework modular model building, described Spatial Dynamics Malaria Transmission (Wu SL, et al. 2023. PLoS Computational Biology)1. mathematical framework now extended cover exogenous forcing weather vector control.","code":""},{"path":"https://dd-harp.github.io/ramp.control/index.html","id":"what-is-rampcontrol","dir":"","previous_headings":"","what":"What is ramp.control?","title":"Control for RAMP","text":"ramp.control code library models vector control can used ramp.xds. packages part suite R packages developed support RAMP: ramp.xds. core computational engine simulation-based analytics. includes basic set models – enough design, verify, demonstrate basic features modular software. ramp.library extended library stable code tested verified. includes large set model families published peer review included ramp.xds ability reuse code reduces costs replicating studies. library, ramp.xds also supports nimble model building analytics mosquito-borne pathogens. ramp.control collection disease control models ramp.xds ramp.work includes algorithms apply framework, include code fit models data constrained optimization ramp.models includes large set models illustrating capabilities ramp.xds ramp.library active development.","code":""},{"path":"https://dd-harp.github.io/ramp.control/index.html","id":"ramplibrary----a-model-library-for-ramp","dir":"","previous_headings":"","what":"ramp.library  A Model Library for RAMP","title":"Control for RAMP","text":"package – ramp.library – contains reusable code rigorously tested implements large number dynamical model families algorithms taken literature describing malaria mosquito-transmitted pathogens (see Reiner, et al. 2013)2. supporting code designed modular, plug--play. modular design makes possible break published models serve dynamical components new models malaria.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.dynamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the bednet — Bed_Net.dynamic","title":"Set the bednet — Bed_Net.dynamic","text":"Set value exogenous variables related bednet","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.dynamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the bednet — Bed_Net.dynamic","text":"","code":"# S3 method for class 'dynamic' Bed_Net(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.dynamic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the bednet — Bed_Net.dynamic","text":"t current simulation time xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.dynamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the bednet — Bed_Net.dynamic","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the bednet — Bed_Net","title":"Set the bednet — Bed_Net","text":"Set value exogenous variables related bednet","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the bednet — Bed_Net","text":"","code":"Bed_Net(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the bednet — Bed_Net","text":"t current simulation time xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the bednet — Bed_Net","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the bednet — Bed_Net.none","title":"Set the bednet — Bed_Net.none","text":"Set value exogenous variables related bednet","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the bednet — Bed_Net.none","text":"","code":"# S3 method for class 'none' Bed_Net(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the bednet — Bed_Net.none","text":"t current simulation time xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the bednet — Bed_Net.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.static.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the bednet — Bed_Net.static","title":"Set the bednet — Bed_Net.static","text":"Set value exogenous variables related bednet","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the bednet — Bed_Net.static","text":"","code":"# S3 method for class 'static' Bed_Net(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the bednet — Bed_Net.static","text":"t current simulation time xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net.static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the bednet — Bed_Net.static","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.func.html","id":null,"dir":"Reference","previous_headings":"","what":"Set no bednet_coverage — Bed_Net_Coverage.func","title":"Set no bednet_coverage — Bed_Net_Coverage.func","text":"null model bednet_coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set no bednet_coverage — Bed_Net_Coverage.func","text":"","code":"# S3 method for class 'func' Bed_Net_Coverage(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set no bednet_coverage — Bed_Net_Coverage.func","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set no bednet_coverage — Bed_Net_Coverage.func","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the cover_bednets — Bed_Net_Coverage","title":"Set the cover_bednets — Bed_Net_Coverage","text":"Set value exogenous variables related cover_bednets","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the cover_bednets — Bed_Net_Coverage","text":"","code":"Bed_Net_Coverage(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the cover_bednets — Bed_Net_Coverage","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the cover_bednets — Bed_Net_Coverage","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Set no bednet_coverage — Bed_Net_Coverage.multiround","title":"Set no bednet_coverage — Bed_Net_Coverage.multiround","text":"null model bednet_coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set no bednet_coverage — Bed_Net_Coverage.multiround","text":"","code":"# S3 method for class 'multiround' Bed_Net_Coverage(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set no bednet_coverage — Bed_Net_Coverage.multiround","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.multiround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set no bednet_coverage — Bed_Net_Coverage.multiround","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set no cover_bednets — Bed_Net_Coverage.none","title":"Set no cover_bednets — Bed_Net_Coverage.none","text":"null model cover_bednets","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set no cover_bednets — Bed_Net_Coverage.none","text":"","code":"# S3 method for class 'none' Bed_Net_Coverage(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set no cover_bednets — Bed_Net_Coverage.none","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Coverage.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set no cover_bednets — Bed_Net_Coverage.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Bed Net Effect Sizes — Bed_Net_Effect_Sizes","title":"Bed Net Effect Sizes — Bed_Net_Effect_Sizes","text":"Compute bed net effect sizes","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bed Net Effect Sizes — Bed_Net_Effect_Sizes","text":"","code":"Bed_Net_Effect_Sizes(t, y, xds_obj, s = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bed Net Effect Sizes — Bed_Net_Effect_Sizes","text":"t current simulation time y state variables vector xds_obj xds model object s vector species index","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bed Net Effect Sizes — Bed_Net_Effect_Sizes","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.lemenach.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify baseline values due to vector control — Bed_Net_Effect_Sizes.lemenach","title":"Modify baseline values due to vector control — Bed_Net_Effect_Sizes.lemenach","text":"Implements Bed_Net_Effect_Sizes Le Menach ITN model vector control","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.lemenach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify baseline values due to vector control — Bed_Net_Effect_Sizes.lemenach","text":"","code":"# S3 method for class 'lemenach' Bed_Net_Effect_Sizes(t, y, xds_obj, s)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.lemenach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify baseline values due to vector control — Bed_Net_Effect_Sizes.lemenach","text":"t current simulation time y state variables vector xds_obj xds model object s vector species index","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.lemenach.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify baseline values due to vector control — Bed_Net_Effect_Sizes.lemenach","text":"named list","code":""},{"path":[]},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.none.html","id":null,"dir":"Reference","previous_headings":"","what":"The null Model for Bed Net Effect Sizes — Bed_Net_Effect_Sizes.none","title":"The null Model for Bed Net Effect Sizes — Bed_Net_Effect_Sizes.none","text":"nothing","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The null Model for Bed Net Effect Sizes — Bed_Net_Effect_Sizes.none","text":"","code":"# S3 method for class 'none' Bed_Net_Effect_Sizes(t, y, xds_obj, s = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The null Model for Bed Net Effect Sizes — Bed_Net_Effect_Sizes.none","text":"t current simulation time y state variables vector xds_obj xds model object s vector species index","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effect_Sizes.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The null Model for Bed Net Effect Sizes — Bed_Net_Effect_Sizes.none","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Bed Net Effects — Bed_Net_Effects","title":"Bed Net Effects — Bed_Net_Effects","text":"Set value variables model implements effects bed nets","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bed Net Effects — Bed_Net_Effects","text":"","code":"Bed_Net_Effects(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bed Net Effects — Bed_Net_Effects","text":"t current time xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bed Net Effects — Bed_Net_Effects","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effects.none.html","id":null,"dir":"Reference","previous_headings":"","what":"No Effects of Bed Nets — Bed_Net_Effects.none","title":"No Effects of Bed Nets — Bed_Net_Effects.none","text":"nothing","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effects.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No Effects of Bed Nets — Bed_Net_Effects.none","text":"","code":"# S3 method for class 'none' Bed_Net_Effects(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effects.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"No Effects of Bed Nets — Bed_Net_Effects.none","text":"t current time xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Bed_Net_Effects.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"No Effects of Bed Nets — Bed_Net_Effects.none","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.dynamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the irs — IRS.dynamic","title":"Set the irs — IRS.dynamic","text":"Set value exogenous variables related irs","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.dynamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the irs — IRS.dynamic","text":"","code":"# S3 method for class 'dynamic' IRS(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.dynamic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the irs — IRS.dynamic","text":"t current simulation time xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.dynamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the irs — IRS.dynamic","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the irs — IRS","title":"Set the irs — IRS","text":"Set value exogenous variables related irs","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the irs — IRS","text":"","code":"IRS(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the irs — IRS","text":"t current simulation time xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the irs — IRS","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the irs — IRS.none","title":"Set the irs — IRS.none","text":"Set value exogenous variables related irs","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the irs — IRS.none","text":"","code":"# S3 method for class 'none' IRS(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the irs — IRS.none","text":"t current simulation time xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the irs — IRS.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.static.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the irs — IRS.static","title":"Set the irs — IRS.static","text":"Set value exogenous variables related irs","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the irs — IRS.static","text":"","code":"# S3 method for class 'static' IRS(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the irs — IRS.static","text":"t current simulation time xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS.static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the irs — IRS.static","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.func.html","id":null,"dir":"Reference","previous_headings":"","what":"Set no irs_coverage — IRS_Coverage.func","title":"Set no irs_coverage — IRS_Coverage.func","text":"null model irs_coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set no irs_coverage — IRS_Coverage.func","text":"","code":"# S3 method for class 'func' IRS_Coverage(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set no irs_coverage — IRS_Coverage.func","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set no irs_coverage — IRS_Coverage.func","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"IRS Coverage — IRS_Coverage","title":"IRS Coverage — IRS_Coverage","text":"Compute IRS coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IRS Coverage — IRS_Coverage","text":"","code":"IRS_Coverage(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IRS Coverage — IRS_Coverage","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IRS Coverage — IRS_Coverage","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"IRS Coverage with Multiple Rounds — IRS_Coverage.multiround","title":"IRS Coverage with Multiple Rounds — IRS_Coverage.multiround","text":"model IRS coverage time several, different IRS models","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IRS Coverage with Multiple Rounds — IRS_Coverage.multiround","text":"","code":"# S3 method for class 'multiround' IRS_Coverage(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IRS Coverage with Multiple Rounds — IRS_Coverage.multiround","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.multiround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IRS Coverage with Multiple Rounds — IRS_Coverage.multiround","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set no use_irss — IRS_Coverage.none","title":"Set no use_irss — IRS_Coverage.none","text":"null model use_irss","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set no use_irss — IRS_Coverage.none","text":"","code":"# S3 method for class 'none' IRS_Coverage(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set no use_irss — IRS_Coverage.none","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Coverage.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set no use_irss — IRS_Coverage.none","text":"list","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"IRS effect_sizes — IRS_Effect_Sizes","title":"IRS effect_sizes — IRS_Effect_Sizes","text":"Set value variables model effect_sizes IRS","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IRS effect_sizes — IRS_Effect_Sizes","text":"","code":"IRS_Effect_Sizes(t, y, xds_obj, s = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IRS effect_sizes — IRS_Effect_Sizes","text":"t current simulation time y state variables xds_obj ramp.xds model object s vector species index","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IRS effect_sizes — IRS_Effect_Sizes","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set no use_bednets — IRS_Effect_Sizes.none","title":"Set no use_bednets — IRS_Effect_Sizes.none","text":"null model use_bednets","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set no use_bednets — IRS_Effect_Sizes.none","text":"","code":"# S3 method for class 'none' IRS_Effect_Sizes(t, y, xds_obj, s = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set no use_bednets — IRS_Effect_Sizes.none","text":"t current simulation time y state variables xds_obj ramp.xds model object s vector species index","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set no use_bednets — IRS_Effect_Sizes.none","text":"list","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify baseline values due to vector control — IRS_Effect_Sizes.simple","title":"Modify baseline values due to vector control — IRS_Effect_Sizes.simple","text":"Implements IRS_Effect_Sizes Le Menach IRS model vector control","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify baseline values due to vector control — IRS_Effect_Sizes.simple","text":"","code":"# S3 method for class 'simple' IRS_Effect_Sizes(t, y, xds_obj, s)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify baseline values due to vector control — IRS_Effect_Sizes.simple","text":"t current simulation time y state variables xds_obj ramp.xds model object s vector species index","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effect_Sizes.simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify baseline values due to vector control — IRS_Effect_Sizes.simple","text":"named list","code":""},{"path":[]},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effects.html","id":null,"dir":"Reference","previous_headings":"","what":"IRS Effects — IRS_Effects","title":"IRS Effects — IRS_Effects","text":"Set value variables model effects IRS","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IRS Effects — IRS_Effects","text":"","code":"IRS_Effects(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IRS Effects — IRS_Effects","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IRS Effects — IRS_Effects","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effects.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set no use_bednets — IRS_Effects.none","title":"Set no use_bednets — IRS_Effects.none","text":"null model use_bednets","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effects.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set no use_bednets — IRS_Effects.none","text":"","code":"# S3 method for class 'none' IRS_Effects(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effects.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set no use_bednets — IRS_Effects.none","text":"t current simulation time y state variables xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/IRS_Effects.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set no use_bednets — IRS_Effects.none","text":"list","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Own_Bed_Net.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the own_bednets — Own_Bed_Net","title":"Set the own_bednets — Own_Bed_Net","text":"Set value exogenous variables related own_bednets","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Own_Bed_Net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the own_bednets — Own_Bed_Net","text":"","code":"Own_Bed_Net(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Own_Bed_Net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the own_bednets — Own_Bed_Net","text":"t current simulation time xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Own_Bed_Net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the own_bednets — Own_Bed_Net","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Own_Bed_Net.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set no own_bednets — Own_Bed_Net.none","title":"Set no own_bednets — Own_Bed_Net.none","text":"null model own_bednets","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Own_Bed_Net.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set no own_bednets — Own_Bed_Net.none","text":"","code":"# S3 method for class 'none' Own_Bed_Net(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Own_Bed_Net.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set no own_bednets — Own_Bed_Net.none","text":"t current simulation time xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Own_Bed_Net.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set no own_bednets — Own_Bed_Net.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/SprayHouses.html","id":null,"dir":"Reference","previous_headings":"","what":"Spray Houses — SprayHouses","title":"Spray Houses — SprayHouses","text":"model","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/SprayHouses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spray Houses — SprayHouses","text":"","code":"SprayHouses(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/SprayHouses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spray Houses — SprayHouses","text":"t current simulation time xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/SprayHouses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spray Houses — SprayHouses","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/SprayHouses.none.html","id":null,"dir":"Reference","previous_headings":"","what":"No House Spraying — SprayHouses.none","title":"No House Spraying — SprayHouses.none","text":"null model house spraying","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/SprayHouses.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No House Spraying — SprayHouses.none","text":"","code":"# S3 method for class 'none' SprayHouses(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/SprayHouses.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"No House Spraying — SprayHouses.none","text":"t current simulation time xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/SprayHouses.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"No House Spraying — SprayHouses.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Use_Bed_Net.html","id":null,"dir":"Reference","previous_headings":"","what":"Use Bed Nets — Use_Bed_Net","title":"Use Bed Nets — Use_Bed_Net","text":"Set value variables related bed net use","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Use_Bed_Net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use Bed Nets — Use_Bed_Net","text":"","code":"Use_Bed_Net(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Use_Bed_Net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use Bed Nets — Use_Bed_Net","text":"t current simulation time xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Use_Bed_Net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use Bed Nets — Use_Bed_Net","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Use_Bed_Net.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Null Bed Net Use Model — Use_Bed_Net.none","title":"Null Bed Net Use Model — Use_Bed_Net.none","text":"nothing","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Use_Bed_Net.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Null Bed Net Use Model — Use_Bed_Net.none","text":"","code":"# S3 method for class 'none' Use_Bed_Net(t, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/Use_Bed_Net.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Null Bed Net Use Model — Use_Bed_Net.none","text":"t current simulation time xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/Use_Bed_Net.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Null Bed Net Use Model — Use_Bed_Net.none","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.dynamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic Vector Control — VectorControl.dynamic","title":"Dynamic Vector Control — VectorControl.dynamic","text":"Calls dynamic_vector_control","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.dynamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamic Vector Control — VectorControl.dynamic","text":"","code":"# S3 method for class 'dynamic' VectorControl(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.dynamic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamic Vector Control — VectorControl.dynamic","text":"t current simulation time y state vector xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.dynamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dynamic Vector Control — VectorControl.dynamic","text":"named list","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.dynamic.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Dynamic Vector Control — VectorControl.dynamic","text":"function implements various modes vector control.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Control for Static Vector Control — VectorControl.setup","title":"Vector Control for Static Vector Control — VectorControl.setup","text":"setup case runs dynamic_vector_control dynamic_vc_effect_sizes , ensure everything configured properly static models. changes case back static calls functions, setup method VectorControlEffectSizes needed","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Control for Static Vector Control — VectorControl.setup","text":"","code":"# S3 method for class 'setup' VectorControl(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Control for Static Vector Control — VectorControl.setup","text":"t current simulation time y state vector xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Control for Static Vector Control — VectorControl.setup","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.static.html","id":null,"dir":"Reference","previous_headings":"","what":"Implement Vector Control — VectorControl.static","title":"Implement Vector Control — VectorControl.static","text":"Implements various forms vector control. mode vector control set configured separately.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implement Vector Control — VectorControl.static","text":"","code":"# S3 method for class 'static' VectorControl(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implement Vector Control — VectorControl.static","text":"t current simulation time y state vector xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implement Vector Control — VectorControl.static","text":"named list","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControl.static.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Implement Vector Control — VectorControl.static","text":"junction implement various modes vector control. Vector control modules require ramp.control.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControlEffectSizes.dynamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute vector control, the null model — VectorControlEffectSizes.dynamic","title":"Distribute vector control, the null model — VectorControlEffectSizes.dynamic","text":"Implements ramp.xds::VectorControl control model vector control (nothing)","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControlEffectSizes.dynamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute vector control, the null model — VectorControlEffectSizes.dynamic","text":"","code":"# S3 method for class 'dynamic' VectorControlEffectSizes(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControlEffectSizes.dynamic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribute vector control, the null model — VectorControlEffectSizes.dynamic","text":"t current simulation time y state vector xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControlEffectSizes.dynamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribute vector control, the null model — VectorControlEffectSizes.dynamic","text":"named list","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControlEffectSizes.static.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute vector control, the null model — VectorControlEffectSizes.static","title":"Distribute vector control, the null model — VectorControlEffectSizes.static","text":"Implements ramp.xds::VectorControl control model vector control (nothing)","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControlEffectSizes.static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute vector control, the null model — VectorControlEffectSizes.static","text":"","code":"# S3 method for class 'static' VectorControlEffectSizes(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControlEffectSizes.static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribute vector control, the null model — VectorControlEffectSizes.static","text":"t current simulation time y state vector xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/VectorControlEffectSizes.static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribute vector control, the null model — VectorControlEffectSizes.static","text":"named list","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/add_bednet_round.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — add_bednet_round","title":"Set up dynamic forcing — add_bednet_round","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/add_bednet_round.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — add_bednet_round","text":"","code":"add_bednet_round(xds_obj, jdate, net_type, peak_access)"},{"path":"https://dd-harp.github.io/ramp.control/reference/add_bednet_round.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — add_bednet_round","text":"xds_obj ramp.xds object jdate julian date bed net mass distribution round net_type type net used peak_access fraction population access bed net","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/add_bednet_round.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — add_bednet_round","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/add_irs_round.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — add_irs_round","title":"Set up dynamic forcing — add_irs_round","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/add_irs_round.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — add_irs_round","text":"","code":"add_irs_round(xds_obj, type, t_init, coverage, zap = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/add_irs_round.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — add_irs_round","text":"xds_obj ramp.xds model object type name IRS type t_init time IRS started coverage coverage achieved zap coverage achieved","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/add_irs_round.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — add_irs_round","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/add_mass_treat_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up Mass Treatment Events — add_mass_treat_events","title":"Set Up Mass Treatment Events — add_mass_treat_events","text":"Set Mass Treatment Events","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/add_mass_treat_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up Mass Treatment Events — add_mass_treat_events","text":"","code":"add_mass_treat_events(xds_obj, jdates, span, frac_tot, test)"},{"path":"https://dd-harp.github.io/ramp.control/reference/add_mass_treat_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up Mass Treatment Events — add_mass_treat_events","text":"xds_obj ramp.xds  model object jdates julian dates mass treatment events span treatment period frac_tot fraction treated test FALSE mass drug administration; TRUE mass screen treat","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/add_mass_treat_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up Mass Treatment Events — add_mass_treat_events","text":"ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_bednet_contact_multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Set values for bednet coverage — change_bednet_contact_multiround","title":"Set values for bednet coverage — change_bednet_contact_multiround","text":"Set values bednet coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_bednet_contact_multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set values for bednet coverage — change_bednet_contact_multiround","text":"","code":"change_bednet_contact_multiround(contact, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/change_bednet_contact_multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set values for bednet coverage — change_bednet_contact_multiround","text":"contact contact parameter(s) xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_bednet_contact_multiround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set values for bednet coverage — change_bednet_contact_multiround","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_bednet_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bednet coverage — change_bednet_coverage","title":"Get bednet coverage — change_bednet_coverage","text":"Get values model set maximum bednet coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_bednet_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bednet coverage — change_bednet_coverage","text":"","code":"change_bednet_coverage(coverage, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/change_bednet_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bednet coverage — change_bednet_coverage","text":"coverage coverage parameters xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_bednet_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bednet coverage — change_bednet_coverage","text":"maximum bednet coverage, vector","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_irs_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get irs coverage — change_irs_coverage","title":"Get irs coverage — change_irs_coverage","text":"Get values model set maximum irs coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_irs_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get irs coverage — change_irs_coverage","text":"","code":"change_irs_coverage(coverage, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/change_irs_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get irs coverage — change_irs_coverage","text":"coverage coverage parameters xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_irs_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get irs coverage — change_irs_coverage","text":"maximum irs coverage, vector","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_irs_coverage.multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Set values for irs coverage — change_irs_coverage.multiround","title":"Set values for irs coverage — change_irs_coverage.multiround","text":"Set values irs coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_irs_coverage.multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set values for irs coverage — change_irs_coverage.multiround","text":"","code":"# S3 method for class 'multiround' change_irs_coverage(coverage, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/change_irs_coverage.multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set values for irs coverage — change_irs_coverage.multiround","text":"coverage coverage parameters xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/change_irs_coverage.multiround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set values for irs coverage — change_irs_coverage.multiround","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/compute_bednet_effect_sizes_lemenach.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify baseline values due to vector control — compute_bednet_effect_sizes_lemenach","title":"Modify baseline values due to vector control — compute_bednet_effect_sizes_lemenach","text":"Implements Bed_Net_Effect_Sizes Le Menach ITN model vector control","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/compute_bednet_effect_sizes_lemenach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify baseline values due to vector control — compute_bednet_effect_sizes_lemenach","text":"","code":"compute_bednet_effect_sizes_lemenach(   ix,   phi,   ff,   qq,   gg,   tau0_frac = c(0.68/3, 2.32/3),   rr = 0.56,   ss = 0.03 )"},{"path":"https://dd-harp.github.io/ramp.control/reference/compute_bednet_effect_sizes_lemenach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify baseline values due to vector control — compute_bednet_effect_sizes_lemenach","text":"ix index nPatches phi ITN coverage ff baseline blood feeding rate qq baseline human fraction gg baseline mosquito mortality rate tau0_frac numeric vector giving proportion feeding cycle spent host seeking/bloodfeeding vs. resting/oviposition rr probability mosquito repelled upon contact ITN ss probability mosquito successfully feeding upon contact ITN","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/compute_bednet_effect_sizes_lemenach.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify baseline values due to vector control — compute_bednet_effect_sizes_lemenach","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/compute_bednet_effect_sizes_lemenach.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Modify baseline values due to vector control — compute_bednet_effect_sizes_lemenach","text":"implements model ITN effect sizes Le Menach , Takala SL, McKenzie FE, Perisse , Harris , Flahault , Smith DL (2007). “elaborated feeding cycle model reductions vectorial capacity night-biting mosquitoes insecticide-treated nets.” Malaria Journal, 6, 10. doi:10.1186/1475-2875-6-10 .","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/compute_irs_effect_sizes_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify baseline values due to vector control — compute_irs_effect_sizes_simple","title":"Modify baseline values due to vector control — compute_irs_effect_sizes_simple","text":"Implements model published 2007","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/compute_irs_effect_sizes_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify baseline values due to vector control — compute_irs_effect_sizes_simple","text":"","code":"compute_irs_effect_sizes_simple(ix, phi, ff, qq, gg, contact = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/compute_irs_effect_sizes_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify baseline values due to vector control — compute_irs_effect_sizes_simple","text":"ix index nPatches phi IRS coverage ff baseline blood feeding rate qq baseline human fraction gg baseline mosquito mortality rate contact probability contact given coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/compute_irs_effect_sizes_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify baseline values due to vector control — compute_irs_effect_sizes_simple","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vc_effect_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Control Dynamics — dynamic_vc_effect_sizes","title":"Vector Control Dynamics — dynamic_vc_effect_sizes","text":"Implements various forms vector control. mode vector control set configured separately.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vc_effect_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Control Dynamics — dynamic_vc_effect_sizes","text":"","code":"dynamic_vc_effect_sizes(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vc_effect_sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Control Dynamics — dynamic_vc_effect_sizes","text":"t current simulation time y state vector xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vc_effect_sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Control Dynamics — dynamic_vc_effect_sizes","text":"named list","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vc_effect_sizes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Vector Control Dynamics — dynamic_vc_effect_sizes","text":"junction implement various modes vector control. Vector control modules require ramp.control.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vector_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Control Dynamics — dynamic_vector_control","title":"Vector Control Dynamics — dynamic_vector_control","text":"Implements various forms vector control. mode vector control set configured separately.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vector_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Control Dynamics — dynamic_vector_control","text":"","code":"dynamic_vector_control(t, y, xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vector_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Control Dynamics — dynamic_vector_control","text":"t current simulation time y state vector xds_obj xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vector_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Control Dynamics — dynamic_vector_control","text":"named list","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/dynamic_vector_control.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Vector Control Dynamics — dynamic_vector_control","text":"junction implement various modes vector control. Vector control modules require ramp.control.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/get_bednet_contact.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Bednet Contact Parameter — get_bednet_contact","title":"Get Bednet Contact Parameter — get_bednet_contact","text":"Get Bednet Contact Parameter","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/get_bednet_contact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Bednet Contact Parameter — get_bednet_contact","text":"","code":"get_bednet_contact(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/get_bednet_contact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Bednet Contact Parameter — get_bednet_contact","text":"xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/get_bednet_contact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Bednet Contact Parameter — get_bednet_contact","text":"contact parameter","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/get_bednet_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bednet coverage — get_bednet_coverage","title":"Get bednet coverage — get_bednet_coverage","text":"Get values model set maximum bednet coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/get_bednet_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bednet coverage — get_bednet_coverage","text":"","code":"get_bednet_coverage(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/get_bednet_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bednet coverage — get_bednet_coverage","text":"xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/get_bednet_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bednet coverage — get_bednet_coverage","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/get_irs_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get irs coverage — get_irs_coverage","title":"Get irs coverage — get_irs_coverage","text":"Get values model set maximum irs coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/get_irs_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get irs coverage — get_irs_coverage","text":"","code":"get_irs_coverage(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/get_irs_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get irs coverage — get_irs_coverage","text":"xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/get_irs_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get irs coverage — get_irs_coverage","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_cover_bednet.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_F_cover_bednet","title":"Set up dynamic forcing — make_F_cover_bednet","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_cover_bednet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_F_cover_bednet","text":"","code":"make_F_cover_bednet(cover)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_cover_bednet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_F_cover_bednet","text":"cover list parameters rounds","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_cover_bednet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_F_cover_bednet","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_cover_irs.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_F_cover_irs","title":"Set up dynamic forcing — make_F_cover_irs","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_cover_irs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_F_cover_irs","text":"","code":"make_F_cover_irs(cover)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_cover_irs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_F_cover_irs","text":"cover coverage model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_cover_irs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_F_cover_irs","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_mass_treat.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_F_mass_treat","title":"Set up dynamic forcing — make_F_mass_treat","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_mass_treat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_F_mass_treat","text":"","code":"make_F_mass_treat(treat)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_mass_treat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_F_mass_treat","text":"treat list parameters rounds","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_F_mass_treat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_F_mass_treat","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_coverage_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_bednet_coverage_function","title":"Set up dynamic forcing — make_bednet_coverage_function","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_coverage_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_bednet_coverage_function","text":"","code":"make_bednet_coverage_function(   options = list(),   mean = 1,   F_season = F_flat,   season_par = list(),   F_trend = F_flat,   trend_par = list() )"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_coverage_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_bednet_coverage_function","text":"options list options override defaults mean mean bednet_coverage F_season seasonal signal bednet coverage season_par parameters configure F_season F_trend temporal trend bednet coverage trend_par parameters configure F_trend","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_coverage_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_bednet_coverage_function","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_effect_sizes_lemenach.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_bednet_effect_sizes_lemenach","title":"Set up dynamic forcing — make_bednet_effect_sizes_lemenach","text":"Set model effect sizes insecticide treated nets using model Le Menach, et al.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_effect_sizes_lemenach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_bednet_effect_sizes_lemenach","text":"","code":"make_bednet_effect_sizes_lemenach(   options = list(),   tau0_frac = c(0.68/3, 2.32/3),   rr = 0.56,   ss = 0.03 )"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_effect_sizes_lemenach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_bednet_effect_sizes_lemenach","text":"options list options override defaults tau0_frac numeric vector giving proportion feeding cycle spent host seeking/bloodfeeding vs. resting/oviposition rr probability mosquito repelled upon contact ITN ss probability mosquito successfully feeding upon contact ITN","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_effect_sizes_lemenach.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_bednet_effect_sizes_lemenach","text":"bed net effect size model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the Multiround Bednet Coverage Object — make_bednet_multiround","title":"Make the Multiround Bednet Coverage Object — make_bednet_multiround","text":"Using information events (see setup_bednet_events), including parameter describing access, makes function computes coverage time.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the Multiround Bednet Coverage Object — make_bednet_multiround","text":"","code":"make_bednet_multiround(xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the Multiround Bednet Coverage Object — make_bednet_multiround","text":"xds_obj ramp.xds  model object options set options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_multiround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the Multiround Bednet Coverage Object — make_bednet_multiround","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_bednet_round","title":"Set up dynamic forcing — make_bednet_round","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_bednet_round","text":"","code":"make_bednet_round(type, t_init, peak, contact = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_bednet_round","text":"type name BedNet type t_init time BedNet started peak peack access achieved contact contact scaling","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_bednet_round","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round.pbo.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_bednet_round.pbo","title":"Set up dynamic forcing — make_bednet_round.pbo","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round.pbo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_bednet_round.pbo","text":"","code":"# S3 method for class 'pbo' make_bednet_round(type, t_init, peak, contact = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round.pbo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_bednet_round.pbo","text":"type name BedNet type t_init time BedNet started peak peack access achieved contact contact scaling","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round.pbo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_bednet_round.pbo","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_bednet_round_generic","title":"Set up dynamic forcing — make_bednet_round_generic","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_bednet_round_generic","text":"","code":"make_bednet_round_generic(   t_init,   uk = 1/5,   L = 365,   dk = 1/60,   peak = 0.7,   contact = 1 )"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_bednet_round_generic","text":"t_init time BedNet started uk scale rate L length half-life dk decay shape parameter peak peak access achieved contact contact scaling parameter","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_bednet_round_generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_bednet_round_generic","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_coverage_func.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_coverage_func","title":"Set up dynamic forcing — make_irs_coverage_func","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_coverage_func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_coverage_func","text":"","code":"make_irs_coverage_func(   options = list(),   mean = 1,   F_season = F_flat,   season_par = list(),   F_trend = F_flat,   trend_par = list() )"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_coverage_func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_coverage_func","text":"options list options override defaults mean mean irs_coverage F_season seasonal signal irs coverage season_par parameters configure F_season F_trend temporal trend irs coverage trend_par parameters configure F_trend","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_coverage_func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_coverage_func","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_effect_sizes_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_effect_sizes_simple","title":"Set up dynamic forcing — make_irs_effect_sizes_simple","text":"simple model IRS effect sizes","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_effect_sizes_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_effect_sizes_simple","text":"","code":"make_irs_effect_sizes_simple(options = list(), contact = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_effect_sizes_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_effect_sizes_simple","text":"options list options override defaults contact probability contact given coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_effect_sizes_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_effect_sizes_simple","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_multiround","title":"Set up dynamic forcing — make_irs_multiround","text":"Set function computes irs coverage time.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_multiround","text":"","code":"make_irs_multiround(   options = list(),   t_init = 0,   coverage = 0,   type = \"none\",   zap = 1 )"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_multiround","text":"options list options override defaults t_init time IRS started coverage coverage achieved type IRS type zap contact parameter","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_multiround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_multiround","text":"IRS coverage model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.actellic.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_round.actellic","title":"Set up dynamic forcing — make_irs_round.actellic","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.actellic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_round.actellic","text":"","code":"# S3 method for class 'actellic' make_irs_round(type, t_init, coverage, zap = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.actellic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_round.actellic","text":"type name IRS type t_init time IRS started coverage coverage achieved zap contact scaling","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.actellic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_round.actellic","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.bendiocarb.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_round.bendiocarb","title":"Set up dynamic forcing — make_irs_round.bendiocarb","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.bendiocarb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_round.bendiocarb","text":"","code":"# S3 method for class 'bendiocarb' make_irs_round(type, t_init, coverage, zap = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.bendiocarb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_round.bendiocarb","text":"type name IRS type t_init time IRS started coverage coverage achieved zap contact scaling","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.bendiocarb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_round.bendiocarb","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.fludora_fusion.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_round.fludora_fusion","title":"Set up dynamic forcing — make_irs_round.fludora_fusion","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.fludora_fusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_round.fludora_fusion","text":"","code":"# S3 method for class 'fludora_fusion' make_irs_round(type, t_init, coverage, zap = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.fludora_fusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_round.fludora_fusion","text":"type name IRS type t_init time IRS started coverage coverage achieved zap contact scaling","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.fludora_fusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_round.fludora_fusion","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_round","title":"Set up dynamic forcing — make_irs_round","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_round","text":"","code":"make_irs_round(type, t_init, coverage, zap = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_round","text":"type name IRS type t_init time IRS started coverage coverage achieved zap contact scaling","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_round","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_round.none","title":"Set up dynamic forcing — make_irs_round.none","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_round.none","text":"","code":"# S3 method for class 'none' make_irs_round(type, t_init, coverage, zap = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_round.none","text":"type name IRS type t_init time IRS started coverage coverage achieved zap contact scaling","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_round.none","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.pyrethroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_round.pyrethroid","title":"Set up dynamic forcing — make_irs_round.pyrethroid","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.pyrethroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_round.pyrethroid","text":"","code":"# S3 method for class 'pyrethroid' make_irs_round(type, t_init, coverage, zap = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.pyrethroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_round.pyrethroid","text":"type name IRS type t_init time IRS started coverage coverage achieved zap contact scaling","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.pyrethroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_round.pyrethroid","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.sumishield.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_round.sumishield","title":"Set up dynamic forcing — make_irs_round.sumishield","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.sumishield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_round.sumishield","text":"","code":"# S3 method for class 'sumishield' make_irs_round(type, t_init, coverage, zap = 1)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.sumishield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_round.sumishield","text":"type name IRS type t_init time IRS started coverage coverage achieved zap contact scaling","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round.sumishield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_round.sumishield","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — make_irs_round_generic","title":"Set up dynamic forcing — make_irs_round_generic","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — make_irs_round_generic","text":"","code":"make_irs_round_generic(   t_init,   uk = 1/5,   L = 365,   dk = 1/60,   coverage = 0.7,   zap = 1 )"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — make_irs_round_generic","text":"t_init time IRS started uk scale rate L length half-life dk decay shape parameter coverage coverage achieved zap contact scaling parameter","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_irs_round_generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — make_irs_round_generic","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_mass_treat_multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Multiple Rounds of msat — make_mass_treat_multiround","title":"Make Multiple Rounds of msat — make_mass_treat_multiround","text":"Using information events (see setup_mass_treat_events), including parameter describing access, makes function computes treatage time.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_mass_treat_multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Multiple Rounds of msat — make_mass_treat_multiround","text":"","code":"make_mass_treat_multiround(xds_obj, screen)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_mass_treat_multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Multiple Rounds of msat — make_mass_treat_multiround","text":"xds_obj ramp.xds  model object screen switch","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_mass_treat_multiround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Multiple Rounds of msat — make_mass_treat_multiround","text":"xds object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_none_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Make ","title":"Make ","text":"Make \"none\" object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_none_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make ","text":"","code":"make_none_object(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/make_none_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make ","text":"xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/make_none_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make ","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/makepar_F_multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Parameters for a Multiround Function — makepar_F_multiround","title":"Make Parameters for a Multiround Function — makepar_F_multiround","text":"Return object configure multiple sharkfin functions representing coverage levels many mass","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/makepar_F_multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Parameters for a Multiround Function — makepar_F_multiround","text":"","code":"makepar_F_multiround(nRounds, rounds)"},{"path":"https://dd-harp.github.io/ramp.control/reference/makepar_F_multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Parameters for a Multiround Function — makepar_F_multiround","text":"nRounds rate parameter rounds rounds","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/makepar_F_multiround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Parameters for a Multiround Function — makepar_F_multiround","text":"multiround function","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_area_spray_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null Area Spray Model Object — setup_area_spray_object","title":"Set Up the Null Area Spray Model Object — setup_area_spray_object","text":"Sets null area spray model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_area_spray_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null Area Spray Model Object — setup_area_spray_object","text":"","code":"setup_area_spray_object(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_area_spray_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null Area Spray Model Object — setup_area_spray_object","text":"xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_area_spray_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null Area Spray Model Object — setup_area_spray_object","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_atsb_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null Sugar Baits Model Object — setup_atsb_object","title":"Set Up the Null Sugar Baits Model Object — setup_atsb_object","text":"Sets null sugar baits model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_atsb_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null Sugar Baits Model Object — setup_atsb_object","text":"","code":"setup_atsb_object(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_atsb_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null Sugar Baits Model Object — setup_atsb_object","text":"xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_atsb_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null Sugar Baits Model Object — setup_atsb_object","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.func.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up a Bed Net Coverage Function — setup_bednet_coverage.func","title":"Set Up a Bed Net Coverage Function — setup_bednet_coverage.func","text":"sets function set value bed net coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up a Bed Net Coverage Function — setup_bednet_coverage.func","text":"","code":"# S3 method for class 'func' setup_bednet_coverage(name = \"func\", xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up a Bed Net Coverage Function — setup_bednet_coverage.func","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Bed Net Coverage Object — setup_bednet_coverage","title":"Set Up the Bed Net Coverage Object — setup_bednet_coverage","text":"Set object model bed net coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Bed Net Coverage Object — setup_bednet_coverage","text":"","code":"setup_bednet_coverage(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Bed Net Coverage Object — setup_bednet_coverage","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Bed Net Coverage Object — setup_bednet_coverage","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up a Bed Net Coverage Function — setup_bednet_coverage.multiround","title":"Set Up a Bed Net Coverage Function — setup_bednet_coverage.multiround","text":"sets function set value bed net coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up a Bed Net Coverage Function — setup_bednet_coverage.multiround","text":"","code":"# S3 method for class 'multiround' setup_bednet_coverage(name = \"multiround\", xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up a Bed Net Coverage Function — setup_bednet_coverage.multiround","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null Bed Net Coverage Object — setup_bednet_coverage.none","title":"Set Up the Null Bed Net Coverage Object — setup_bednet_coverage.none","text":"Set null bed net coverage object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null Bed Net Coverage Object — setup_bednet_coverage.none","text":"","code":"# S3 method for class 'none' setup_bednet_coverage(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null Bed Net Coverage Object — setup_bednet_coverage.none","text":"name name model set xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_coverage.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null Bed Net Coverage Object — setup_bednet_coverage.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Bed Net Effect Sizes Object — setup_bednet_effect_sizes","title":"Set Up the Bed Net Effect Sizes Object — setup_bednet_effect_sizes","text":"Set model object compute effect sizes bed nets","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Bed Net Effect Sizes Object — setup_bednet_effect_sizes","text":"","code":"setup_bednet_effect_sizes(name, xds_obj, s = 1, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Bed Net Effect Sizes Object — setup_bednet_effect_sizes","text":"name bed net effect sizes model name xds_obj xds model object s vector species index options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Bed Net Effect Sizes Object — setup_bednet_effect_sizes","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.lemenach.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — setup_bednet_effect_sizes.lemenach","title":"Set up dynamic forcing — setup_bednet_effect_sizes.lemenach","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.lemenach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — setup_bednet_effect_sizes.lemenach","text":"","code":"# S3 method for class 'lemenach' setup_bednet_effect_sizes(name, xds_obj, s = 1, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.lemenach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — setup_bednet_effect_sizes.lemenach","text":"name bed net effect sizes model name xds_obj xds model object s vector species index options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null Model for Bed Net Effect Sizes — setup_bednet_effect_sizes.none","title":"Set Up the Null Model for Bed Net Effect Sizes — setup_bednet_effect_sizes.none","text":"Set null bed net effect sizes model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null Model for Bed Net Effect Sizes — setup_bednet_effect_sizes.none","text":"","code":"# S3 method for class 'none' setup_bednet_effect_sizes(name, xds_obj, s = 1, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null Model for Bed Net Effect Sizes — setup_bednet_effect_sizes.none","text":"name bed net effect sizes model name xds_obj xds model object s vector species index options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effect_sizes.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null Model for Bed Net Effect Sizes — setup_bednet_effect_sizes.none","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Bed Net Effects Object — setup_bednet_effects","title":"Set Up the Bed Net Effects Object — setup_bednet_effects","text":"Set object compute effect bed nets, modify availability human hosts blood feeding","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Bed Net Effects Object — setup_bednet_effects","text":"","code":"setup_bednet_effects(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Bed Net Effects Object — setup_bednet_effects","text":"name model name xds_obj xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Bed Net Effects Object — setup_bednet_effects","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effects.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null Bed Net effectsership Object — setup_bednet_effects.none","title":"Set Up the Null Bed Net effectsership Object — setup_bednet_effects.none","text":"Set null bed net effectsership object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effects.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null Bed Net effectsership Object — setup_bednet_effects.none","text":"","code":"# S3 method for class 'none' setup_bednet_effects(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effects.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null Bed Net effectsership Object — setup_bednet_effects.none","text":"name name model set xds_obj xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_effects.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null Bed Net effectsership Object — setup_bednet_effects.none","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up Bed Net Evaluation — setup_bednet_events","title":"Set Up Bed Net Evaluation — setup_bednet_events","text":"Set Bed Net Evaluation","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up Bed Net Evaluation — setup_bednet_events","text":"","code":"setup_bednet_events(xds_obj, jdates, net_type, peak_access)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up Bed Net Evaluation — setup_bednet_events","text":"xds_obj ramp.xds  model object jdates julian dates bed net mass distribution events net_type type net used peak_access fraction population access bed net","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up Bed Net Evaluation — setup_bednet_events","text":"ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null Bednet Model Object — setup_bednet_object","title":"Set Up the Null Bednet Model Object — setup_bednet_object","text":"Sets null bednet model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null Bednet Model Object — setup_bednet_object","text":"","code":"setup_bednet_object(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null Bednet Model Object — setup_bednet_object","text":"xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null Bednet Model Object — setup_bednet_object","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_own.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Bed Net Ownership Object — setup_bednet_own","title":"Set Up the Bed Net Ownership Object — setup_bednet_own","text":"Set object model bed net ownership","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_own.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Bed Net Ownership Object — setup_bednet_own","text":"","code":"setup_bednet_own(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_own.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Bed Net Ownership Object — setup_bednet_own","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_own.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Bed Net Ownership Object — setup_bednet_own","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_own.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null Bed Net Ownership Object — setup_bednet_own.none","title":"Set Up the Null Bed Net Ownership Object — setup_bednet_own.none","text":"Set null bed net ownership object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_own.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null Bed Net Ownership Object — setup_bednet_own.none","text":"","code":"# S3 method for class 'none' setup_bednet_own(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_own.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null Bed Net Ownership Object — setup_bednet_own.none","text":"name name model set xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_own.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null Bed Net Ownership Object — setup_bednet_own.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_use.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Bed Net Use Object — setup_bednet_use","title":"Set Up the Bed Net Use Object — setup_bednet_use","text":"Set object model bed net use","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_use.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Bed Net Use Object — setup_bednet_use","text":"","code":"setup_bednet_use(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_use.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Bed Net Use Object — setup_bednet_use","text":"name model name xds_obj xds model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_use.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Bed Net Use Object — setup_bednet_use","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_use.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null Bed Net Use Object — setup_bednet_use.none","title":"Set Up the Null Bed Net Use Object — setup_bednet_use.none","text":"Set null bed net use object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_use.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null Bed Net Use Object — setup_bednet_use.none","text":"","code":"# S3 method for class 'none' setup_bednet_use(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_use.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null Bed Net Use Object — setup_bednet_use.none","text":"name name model set xds_obj xds model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednet_use.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null Bed Net Use Object — setup_bednet_use.none","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednets.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up a Bed Net Model — setup_bednets","title":"Set Up a Bed Net Model — setup_bednets","text":"sets bed net model","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up a Bed Net Model — setup_bednets","text":"","code":"setup_bednets(   xds_obj,   own_name = \"none\",   own_opts = list(),   use_name = \"none\",   use_opts = list(),   effects_name = \"none\",   effects_opts = list(),   coverage_name = \"none\",   coverage_opts = list(),   effect_sizes_name = \"none\",   effect_sizes_opts = list() )"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up a Bed Net Model — setup_bednets","text":"xds_obj ramp.xds  model object own_name name model bed net ownership own_opts options bed net ownership model use_name name model bed net usage use_opts options bed net usage model effects_name name model bed net effects effects_opts options bed net effects model coverage_name name model bed net coverage coverage_opts options bed net coverage model effect_sizes_name name model bed net effect sizes effect_sizes_opts options bed net effect sizes model","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_bednets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up a Bed Net Model — setup_bednets","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up a Bed Net Model — setup_irs","title":"Set Up a Bed Net Model — setup_irs","text":"sets bed net model","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up a Bed Net Model — setup_irs","text":"","code":"setup_irs(   xds_obj,   spray_houses_name = \"none\",   spray_houses_opts = list(),   effects_name = \"none\",   effects_opts = list(),   coverage_name = \"none\",   coverage_opts = list(),   effect_sizes_name = \"none\",   effect_sizes_opts = list() )"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up a Bed Net Model — setup_irs","text":"xds_obj ramp.xds  model object spray_houses_name name model bed net ownership spray_houses_opts options bed net ownership model effects_name name model bed net effects effects_opts options bed net effects model coverage_name name model bed net coverage coverage_opts options bed net coverage model effect_sizes_name name model bed net effect sizes effect_sizes_opts options bed net effect sizes model","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up a Bed Net Model — setup_irs","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.func.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up a IRS Coverage Function — setup_irs_coverage.func","title":"Set Up a IRS Coverage Function — setup_irs_coverage.func","text":"sets function set value bed net coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up a IRS Coverage Function — setup_irs_coverage.func","text":"","code":"# S3 method for class 'func' setup_irs_coverage(name = \"func\", xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up a IRS Coverage Function — setup_irs_coverage.func","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the IRS Coverage Object — setup_irs_coverage","title":"Set Up the IRS Coverage Object — setup_irs_coverage","text":"Set object model effects IRS, usually computation intermediate variable","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the IRS Coverage Object — setup_irs_coverage","text":"","code":"setup_irs_coverage(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the IRS Coverage Object — setup_irs_coverage","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the IRS Coverage Object — setup_irs_coverage","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — setup_irs_coverage.multiround","title":"Set up dynamic forcing — setup_irs_coverage.multiround","text":"set utility function IRS_Coverage.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — setup_irs_coverage.multiround","text":"","code":"# S3 method for class 'multiround' setup_irs_coverage(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — setup_irs_coverage.multiround","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.multiround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up dynamic forcing — setup_irs_coverage.multiround","text":"IRS coverage model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null IRS Coverage Object — setup_irs_coverage.none","title":"Set Up the Null IRS Coverage Object — setup_irs_coverage.none","text":"Set model IRS effects nothing.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null IRS Coverage Object — setup_irs_coverage.none","text":"","code":"# S3 method for class 'none' setup_irs_coverage(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null IRS Coverage Object — setup_irs_coverage.none","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_coverage.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null IRS Coverage Object — setup_irs_coverage.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the IRS effect_sizes Object — setup_irs_effect_sizes","title":"Set Up the IRS effect_sizes Object — setup_irs_effect_sizes","text":"Set object model effect_sizes IRS, usually computation intermediate variable","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the IRS effect_sizes Object — setup_irs_effect_sizes","text":"","code":"setup_irs_effect_sizes(name, xds_obj, s = 1, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the IRS effect_sizes Object — setup_irs_effect_sizes","text":"name model name xds_obj ramp.xds  model object s vector species index options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the IRS effect_sizes Object — setup_irs_effect_sizes","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null IRS effect_sizes Object — setup_irs_effect_sizes.none","title":"Set Up the Null IRS effect_sizes Object — setup_irs_effect_sizes.none","text":"Set model IRS effect_sizes nothing.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null IRS effect_sizes Object — setup_irs_effect_sizes.none","text":"","code":"# S3 method for class 'none' setup_irs_effect_sizes(name, xds_obj, s = 1, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null IRS effect_sizes Object — setup_irs_effect_sizes.none","text":"name model name xds_obj ramp.xds  model object s vector species index options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null IRS effect_sizes Object — setup_irs_effect_sizes.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up dynamic forcing — setup_irs_effect_sizes.simple","title":"Set up dynamic forcing — setup_irs_effect_sizes.simple","text":"dynamic forcing already set , turn dynamic forcing set ","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up dynamic forcing — setup_irs_effect_sizes.simple","text":"","code":"# S3 method for class 'simple' setup_irs_effect_sizes(name, xds_obj, s = 1, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effect_sizes.simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up dynamic forcing — setup_irs_effect_sizes.simple","text":"name model name xds_obj ramp.xds  model object s vector species index options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the IRS Effects Object — setup_irs_effects","title":"Set Up the IRS Effects Object — setup_irs_effects","text":"Set object model effects IRS, usually computation intermediate variable","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the IRS Effects Object — setup_irs_effects","text":"","code":"setup_irs_effects(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the IRS Effects Object — setup_irs_effects","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the IRS Effects Object — setup_irs_effects","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effects.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null IRS Effects Object — setup_irs_effects.none","title":"Set Up the Null IRS Effects Object — setup_irs_effects.none","text":"Set model IRS effects nothing.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effects.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null IRS Effects Object — setup_irs_effects.none","text":"","code":"# S3 method for class 'none' setup_irs_effects(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effects.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null IRS Effects Object — setup_irs_effects.none","text":"name name model set xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_effects.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null IRS Effects Object — setup_irs_effects.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up IRS Evaluation — setup_irs_events","title":"Set Up IRS Evaluation — setup_irs_events","text":"Set IRS Evaluation","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up IRS Evaluation — setup_irs_events","text":"","code":"setup_irs_events(xds_obj, jdates, pesticides, frac_sprayed)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up IRS Evaluation — setup_irs_events","text":"xds_obj ramp.xds  model object jdates julian dates IRS events pesticides pesticide used frac_sprayed fraction houses sprayed","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up IRS Evaluation — setup_irs_events","text":"ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null IRS Model Object — setup_irs_object","title":"Set Up the Null IRS Model Object — setup_irs_object","text":"Sets null IRS model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null IRS Model Object — setup_irs_object","text":"","code":"setup_irs_object(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null IRS Model Object — setup_irs_object","text":"xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_irs_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null IRS Model Object — setup_irs_object","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_lsm_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null LSM Model Object — setup_lsm_object","title":"Set Up the Null LSM Model Object — setup_lsm_object","text":"Sets null LSM model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_lsm_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null LSM Model Object — setup_lsm_object","text":"","code":"setup_lsm_object(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_lsm_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null LSM Model Object — setup_lsm_object","text":"xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_lsm_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null LSM Model Object — setup_lsm_object","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_mass_treat_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up Mass Treatment Events — setup_mass_treat_events","title":"Set Up Mass Treatment Events — setup_mass_treat_events","text":"Set Mass Treatment Events","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_mass_treat_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up Mass Treatment Events — setup_mass_treat_events","text":"","code":"setup_mass_treat_events(xds_obj, jdates, span, frac_tot, test)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_mass_treat_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up Mass Treatment Events — setup_mass_treat_events","text":"xds_obj ramp.xds  model object jdates julian dates mass treatment events span treatment period (days) frac_tot fraction treated test FALSE mass drug administration; TRUE mass screen treat","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_mass_treat_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up Mass Treatment Events — setup_mass_treat_events","text":"ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_mass_treat_multiround.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up a Bed Net Function — setup_mass_treat_multiround","title":"Set Up a Bed Net Function — setup_mass_treat_multiround","text":"sets function set value bed net treatage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_mass_treat_multiround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up a Bed Net Function — setup_mass_treat_multiround","text":"","code":"setup_mass_treat_multiround(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_mass_treat_multiround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up a Bed Net Function — setup_mass_treat_multiround","text":"xds_obj ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_spray_houses.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the House Spraying Object — setup_spray_houses","title":"Set Up the House Spraying Object — setup_spray_houses","text":"Set object model house spraying","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_spray_houses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the House Spraying Object — setup_spray_houses","text":"","code":"setup_spray_houses(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_spray_houses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the House Spraying Object — setup_spray_houses","text":"name model name xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_spray_houses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the House Spraying Object — setup_spray_houses","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_spray_houses.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up the Null House Spraying Object — setup_spray_houses.none","title":"Set Up the Null House Spraying Object — setup_spray_houses.none","text":"Set null house spraying model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_spray_houses.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up the Null House Spraying Object — setup_spray_houses.none","text":"","code":"# S3 method for class 'none' setup_spray_houses(name, xds_obj, options = list())"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_spray_houses.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up the Null House Spraying Object — setup_spray_houses.none","text":"name name model set xds_obj ramp.xds  model object options list options override defaults","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_spray_houses.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up the Null House Spraying Object — setup_spray_houses.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.dynamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Control is Turned On — setup_vector_control.dynamic","title":"Vector Control is Turned On — setup_vector_control.dynamic","text":"class(xds_obj$vector_control) == 'dynamic' dynamic vector control turned . unmodified ramp.xds model object returned.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.dynamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Control is Turned On — setup_vector_control.dynamic","text":"","code":"# S3 method for class 'dynamic' setup_vector_control(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.dynamic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Control is Turned On — setup_vector_control.dynamic","text":"xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.dynamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Control is Turned On — setup_vector_control.dynamic","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up Vector Control — setup_vector_control","title":"Set up Vector Control — setup_vector_control","text":"function sets vector control calls function. cases : none empty object static object needs initialized setup object must initialized dynamic object must evaluated every time function sets vector_control_obj dynamic every trivial module every mode vector control set . Otherwise, nothing happens.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up Vector Control — setup_vector_control","text":"","code":"setup_vector_control(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up Vector Control — setup_vector_control","text":"xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up Vector Control — setup_vector_control","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.none.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up Vector Control — setup_vector_control.none","title":"Set Up Vector Control — setup_vector_control.none","text":"class(xds_obj$vector_control_obj) == 'none' function sets objects implemented modes vector control.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up Vector Control — setup_vector_control.none","text":"","code":"# S3 method for class 'none' setup_vector_control(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up Vector Control — setup_vector_control.none","text":"xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Up Vector Control — setup_vector_control.none","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Control is in Setup Mode — setup_vector_control.setup","title":"Vector Control is in Setup Mode — setup_vector_control.setup","text":"class(xds_obj$vector_control) == 'setup' mode vector control already changed setup. Nothing needs changed. unmodified ramp.xds model object returned.","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Control is in Setup Mode — setup_vector_control.setup","text":"","code":"# S3 method for class 'setup' setup_vector_control(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Control is in Setup Mode — setup_vector_control.setup","text":"xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Control is in Setup Mode — setup_vector_control.setup","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.static.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Control is Static — setup_vector_control.static","title":"Vector Control is Static — setup_vector_control.static","text":"class(xds_obj$vector_control) == 'static' vector control already set . changes class 'setup' force model run dynamic_vector_control .","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Control is Static — setup_vector_control.static","text":"","code":"# S3 method for class 'static' setup_vector_control(xds_obj)"},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Control is Static — setup_vector_control.static","text":"xds_obj ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/setup_vector_control.static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Control is Static — setup_vector_control.static","text":"ramp.xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_bednet_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Bednet Coverage — show_bednet_coverage","title":"Plot Bednet Coverage — show_bednet_coverage","text":"Plot Bednet Coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_bednet_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Bednet Coverage — show_bednet_coverage","text":"","code":"show_bednet_coverage(tt, xds_obj, clr = \"black\", add = FALSE)"},{"path":"https://dd-harp.github.io/ramp.control/reference/show_bednet_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Bednet Coverage — show_bednet_coverage","text":"tt set time points xds_obj ramp.xds model object clr plotting color add add existing plot","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_bednet_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Bednet Coverage — show_bednet_coverage","text":"ramp.xds xds_obj object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_bednet_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Show bednet Events — show_bednet_events","title":"Show bednet Events — show_bednet_events","text":"Show bednet Events","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_bednet_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show bednet Events — show_bednet_events","text":"","code":"show_bednet_events(xds_obj, mn = 0, mx = 1, clr = \"#E4460AFF\")"},{"path":"https://dd-harp.github.io/ramp.control/reference/show_bednet_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show bednet Events — show_bednet_events","text":"xds_obj ramp.xds  model object mn bottom segment mx top segment clr color line segments","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_bednet_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show bednet Events — show_bednet_events","text":"ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Events — show_events","title":"Show Events — show_events","text":"Show Events","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Events — show_events","text":"","code":"show_events(   xds_obj,   mn = 0,   mx = 1,   bclr = \"#E4460AFF\",   iclr = \"#4686FBFF\",   add = FALSE )"},{"path":"https://dd-harp.github.io/ramp.control/reference/show_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Events — show_events","text":"xds_obj ramp.xds  model object mn bottom segment mx top segment bclr color bednet line segments iclr color irs line segments add TRUE, add existing plot","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show Events — show_events","text":"ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_irs_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot IRS Coverage — show_irs_coverage","title":"Plot IRS Coverage — show_irs_coverage","text":"Plot IRS Coverage","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_irs_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot IRS Coverage — show_irs_coverage","text":"","code":"show_irs_coverage(tt, xds_obj, clr = \"black\", add = FALSE)"},{"path":"https://dd-harp.github.io/ramp.control/reference/show_irs_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot IRS Coverage — show_irs_coverage","text":"tt set time points xds_obj ramp.xds model object clr plotting color add add existing plot","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_irs_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot IRS Coverage — show_irs_coverage","text":"ramp.xds xds_obj object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_irs_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Show IRS Events — show_irs_events","title":"Show IRS Events — show_irs_events","text":"Show IRS Events","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_irs_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show IRS Events — show_irs_events","text":"","code":"show_irs_events(xds_obj, mn = 0, mx = 1, clr = \"#4686FBFF\", add = FALSE)"},{"path":"https://dd-harp.github.io/ramp.control/reference/show_irs_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show IRS Events — show_irs_events","text":"xds_obj ramp.xds  model object mn bottom segment mx top segment clr color line segments add TRUE, add existing plot","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_irs_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show IRS Events — show_irs_events","text":"ramp.xds  model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_mda.html","id":null,"dir":"Reference","previous_headings":"","what":"Show MDA — show_mda","title":"Show MDA — show_mda","text":"Plot per-capita mass treatment rate","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_mda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show MDA — show_mda","text":"","code":"show_mda(tt, xds_obj, clr = \"black\", add = FALSE)"},{"path":"https://dd-harp.github.io/ramp.control/reference/show_mda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show MDA — show_mda","text":"tt set time points xds_obj ramp.xds  model object add FALSE, use plot draw new axes clrs line color(s)","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_mda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show MDA — show_mda","text":"xds model object","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_msat.html","id":null,"dir":"Reference","previous_headings":"","what":"Show MSAT — show_msat","title":"Show MSAT — show_msat","text":"Plot per-capita mass treatment rate","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_msat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show MSAT — show_msat","text":"","code":"show_msat(tt, xds_obj, clr = \"black\", add = FALSE)"},{"path":"https://dd-harp.github.io/ramp.control/reference/show_msat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show MSAT — show_msat","text":"tt set time points xds_obj ramp.xds  model object add FALSE, use plot draw new axes clrs line color(s)","code":""},{"path":"https://dd-harp.github.io/ramp.control/reference/show_msat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show MSAT — show_msat","text":"xds model object","code":""}]
